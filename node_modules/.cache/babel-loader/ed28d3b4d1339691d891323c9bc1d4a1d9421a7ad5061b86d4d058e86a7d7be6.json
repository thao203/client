{"ast":null,"code":"import axios from'axios';// Lấy baseURL từ biến môi trường, fallback đến production nếu không có\nconst baseURL=process.env.REACT_APP_API_BASE_URL||'https://server-plum-xi.vercel.app';const request=axios.create({baseURL,withCredentials:true});// Interceptor cho request (tùy chọn, để thêm token vào header nếu cần)\nrequest.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>Promise.reject(error));export default request;","map":{"version":3,"names":["axios","baseURL","process","env","REACT_APP_API_BASE_URL","request","create","withCredentials","interceptors","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject"],"sources":["E:/Documents/Hoc_Tap/LATN/client/src/config/Connect.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Lấy baseURL từ biến môi trường, fallback đến production nếu không có\r\nconst baseURL = process.env.REACT_APP_API_BASE_URL || 'https://server-plum-xi.vercel.app';\r\n\r\nconst request = axios.create({\r\n    baseURL,\r\n    withCredentials: true,\r\n});\r\n\r\n// Interceptor cho request (tùy chọn, để thêm token vào header nếu cần)\r\nrequest.interceptors.request.use(\r\n    config => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    error => Promise.reject(error)\r\n);\r\n\r\nexport default request;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,EAAI,mCAAmC,CAEzF,KAAM,CAAAC,OAAO,CAAGL,KAAK,CAACM,MAAM,CAAC,CACzBL,OAAO,CACPM,eAAe,CAAE,IACrB,CAAC,CAAC,CAEF;AACAF,OAAO,CAACG,YAAY,CAACH,OAAO,CAACI,GAAG,CAC5BC,MAAM,EAAI,CACN,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACPD,MAAM,CAACI,OAAO,CAACC,aAAa,CAAG,UAAUJ,KAAK,EAAE,CACpD,CACA,MAAO,CAAAD,MAAM,CACjB,CAAC,CACDM,KAAK,EAAIC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC,CAED,cAAe,CAAAX,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}